<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8" />
    <title>GreenRep World Map</title>
    <meta
      name="viewport"
      content="initial-scale=1,maximum-scale=1,user-scalable=no"
    />
    <link
      rel="stylesheet"
      href="//cdnjs.cloudflare.com/ajax/libs/lightbox2/2.11.1/css/lightbox.min.css"
    />
	<link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css"/>
    <script src="https://api.mapbox.com/mapbox-gl-js/v1.9.1/mapbox-gl.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/2.3.0/socket.io.js"></script>
    <link
      href="https://api.mapbox.com/mapbox-gl-js/v1.9.1/mapbox-gl.css"
      rel="stylesheet"
    />
    <style>
      body {
        margin: 0;
        padding: 0;
      }
      #map {
        position: absolute;
        top: 0;
        bottom: 0;
        width: 100%;
      }
      .marker-1 {
        background-image: url("/assets/marker-1.png");
        background-size: cover;
        width: 50px;
        height: 50px;
        border-radius: 50%;
        cursor: pointer;
      }
      .marker-2 {
        background-image: url("/assets/marker-2.png");
        background-size: cover;
        width: 50px;
        height: 50px;
        border-radius: 50%;
        cursor: pointer;
      }
      .marker-3 {
        background-image: url("/assets/marker-3.png");
        background-size: cover;
        width: 50px;
        height: 50px;
        border-radius: 50%;
        cursor: pointer;
      }
      .marker-4 {
        background-image: url("/assets/marker-4.png");
        background-size: cover;
        width: 50px;
        height: 50px;
        border-radius: 50%;
        cursor: pointer;
      }
      .marker-5 {
        background-image: url("/assets/marker-5.png");
        background-size: cover;
        width: 50px;
        height: 50px;
        border-radius: 50%;
        cursor: pointer;
      }
      .mapboxgl-popup {
        max-width: 200px;
      }
      .mapboxgl-popup-content {
        text-align: center;
        font-family: "Open Sans", sans-serif;
      }
      .image {
        background-size: cover;
        max-width: 200px;
      }
      .score {
        width: 60px;
        height: 60px;
        line-height: 60px;
        margin: auto;
        text-align: center;
        border-radius: 50%;
        border: 2px solid orange;
      }
      .score p {
        font-size: 1.5rem;
        padding: 0;
        margin: 0;
      }
      h3,
      p {
        font-size: 1.02rem;
      }
    </style>
	
  </head>
  <body>
  <!-- Navigation -->
<nav class="navbar navbar-expand-lg navbar-dark bg-dark static-top">
  <div class="container">
    <a class="navbar-brand" href="#">
          <img src="http://placehold.it/150x50?text=Logo" alt="">
        </a>
    <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarResponsive" aria-controls="navbarResponsive" aria-expanded="false" aria-label="Toggle navigation">
          <span class="navbar-toggler-icon"></span>
        </button>
    <div class="collapse navbar-collapse" id="navbarResponsive">
      <ul class="navbar-nav ml-auto">
        <li class="nav-item active">
          <a class="nav-link" href="#">Home
                <span class="sr-only">(current)</span>
              </a>
        </li>
        <li class="nav-item">
          <a class="nav-link" href="#">About</a>
        </li>
        <li class="nav-item">
          <a class="nav-link" href="#">Services</a>
        </li>
        <li class="nav-item">
          <a class="nav-link" href="#">Contact</a>
        </li>
      </ul>
    </div>
  </div>
</nav>
	<div class="container">
	<div class="row">
    <div id="map"></div>
	</div>
	</div>

    <script>
      (() => {
        if (navigator.geolocation) {
          navigator.geolocation.getCurrentPosition(
            getLocation_success,
            getLocation_error
          );
        } else {
          alert("Geolocation is not supported by this browser.");
        }
      })();

      function getLocation_success(position) {
        LoadMap(position, 10); //pos and zoom
      }

      function getLocation_error(err) {
        console.warn("ERROR(" + err.code + "): " + err.message);
        LoadMap({ coords: { latitude: 0, longitude: 0 } }, 2); //pos and zoom
      }

      function LoadMap(position, zoom) {
        console.log(position.coords.longitude);
        console.log(position.coords.latitude);
        //Initialize Socket
        let PORT = "<%= PORT %>";
        let connectionUrl = `wss://greenmaprep.herokuapp.com/`;
        let connectionUrlDev = `localhost:${PORT}`;
        let socket = io.connect(connectionUrl);
        let dataArr;

        function assignData(data) {
          dataArr = data;
        }

        socket.on("data", function (data) {
          assignData(data);

          mapboxgl.accessToken =
            "pk.eyJ1IjoiZ3JlZW5yZXAiLCJhIjoiY2s4cWx4anF3MDRiZDNncGkwdWpjdml1eiJ9.1dJ2FHIIPIpEqm5-3jHf0Q";
          let map = new mapboxgl.Map({
            container: "map",
            style: "mapbox://styles/mapbox/streets-v9",
            //change center to user's location
            center: [position.coords.longitude, position.coords.latitude],
            zoom: zoom,
          });
			
          let geojson = {
            features: dataArr,
            type: "FeatureCollection",
          };

          // add markers to map
          geojson.features.forEach(function (marker) {
            // create a HTML element for each feature
            let el = document.createElement("div");

            //CHECK THE REVIEW SCORE AND DETERMINE WHAT ICON
            let markerType;
            if (marker.properties.score <= 1.5) {
              markerType = "marker-1";
            } else if (marker.properties.score <= 2.5) {
              markerType = "marker-2";
            } else if (marker.properties.score <= 3.5) {
              markerType = "marker-3";
            } else if (marker.properties.score <= 4.5) {
              markerType = "marker-4";
            } else {
              markerType = "marker-5";
            }
            el.className = markerType;

            // make a marker for each feature and add to the map
            new mapboxgl.Marker(el)
              .setLngLat(marker.geometry.coordinates)
              .setPopup(
                new mapboxgl.Popup({ offset: 25 }) // add popups
                  .setHTML(
                    "<h3>" +
                      marker.properties.title +
                      "</h3><p>" +
                      marker.properties.description +
                      "</p>" +
                      `<h3>User submitted score </h3> <div class="score"><p>${marker.properties.score}</p></div>` +
                      `<h3>User submitted image</h3>` +
                      `<a data-lightbox="image-1" data-title="${marker.properties.title} <br> ${marker.properties.description}" href="${marker.properties.imageurl}"><img src="${marker.properties.imageurl}" class="image"></a>`
                  )
              )
              .addTo(map);
          });
        });
      }
    </script>
    <script src="//cdnjs.cloudflare.com/ajax/libs/lightbox2/2.11.1/js/lightbox-plus-jquery.min.js"></script>
  </body>
</html>
